{"ast":null,"code":"var _jsxFileName = \"/Users/jangsungho/Desktop/study-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser'; // import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'Jang',\n    email: 'tjdgh92@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'kim',\n    email: 'kim@example.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  return state;\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jangsungho/Desktop/study-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","App","dispatch","onRemove","onToggle","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,WAA5C,QAA8D,OAA9D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AACA;AACA;AACA;;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,EAAkCC,MAAzC;AACD;;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE;AAFF,GADY;AAKnBV,EAAAA,KAAK,EAAC,CACJ;AACEW,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,KAAK,EAAE,mBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GADI,EAOJ;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE,oBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAPI,EAaJ;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAbI;AALa,CAArB;;AA2BA,SAASO,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC7B,SAAOD,KAAP;AACD;;AAED,SAASE,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBtB,UAAU,CAACkB,OAAD,EAAUL,YAAV,CAApC;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAwB,MAAA,QAAQ,EAAEiB,QAAlC;AAA4C,MAAA,QAAQ,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6DAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GAXQJ,G;;KAAAA,G;AAaP,eAAeA,GAAf","sourcesContent":["import React, {useRef, useReducer, useMemo, useCallback} from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\n\n// import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs:{\n    username: '',\n    email: ''\n  },\n  users:[\n    {\n      id: 1,\n      username: 'Jang',\n      email: 'tjdgh92@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'kim',\n      email: 'kim@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action){\n  return state;\n}\n\nfunction App() {\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <>\n      <CreateUser />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n  \n  export default App;"]},"metadata":{},"sourceType":"module"}