{"ast":null,"code":"var _jsxFileName = \"/Users/jangsungho/Desktop/study-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './hooks/useInputs'; // import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'Jang',\n    email: 'tjdgh92@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'kim',\n    email: 'kim@example.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    // case 'CHANGE_INPUT':\n    //   return{\n    //     ...state,\n    //     inputs:{\n    //       ...state.inputs,\n    //       [action.name]: action.value\n    //     }\n    //   };\n    case 'CREATE_USER':\n      return {\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return {\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return {\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const UserDispatch = /*#__PURE__*/React.createContext(null);\n\nfunction App() {\n  _s();\n\n  const [{\n    username,\n    email\n  }, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    onReset();\n    nextId.current += 1;\n  }, [username, email, reset]);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"hS7SZjBtIkUstXoEgy3NWstr/Ig=\", false, function () {\n  return [useInputs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jangsungho/Desktop/study-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","concat","map","UserDispatch","createContext","App","onChange","reset","dispatch","nextId","onCreate","current","onReset","count"],"mappings":"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","sourcesContent":["import React, {useRef, useReducer, useMemo, useCallback} from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './hooks/useInputs';\n\n// import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs:{\n    username: '',\n    email: ''\n  },\n  users:[\n    {\n      id: 1,\n      username: 'Jang',\n      email: 'tjdgh92@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'kim',\n      email: 'kim@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action){\n  switch(action.type){\n    // case 'CHANGE_INPUT':\n    //   return{\n    //     ...state,\n    //     inputs:{\n    //       ...state.inputs,\n    //       [action.name]: action.value\n    //     }\n    //   };\n      case 'CREATE_USER':\n        return{\n          users: state.users.concat(action.user)\n        };\n      case 'TOGGLE_USER':\n        return{\n          users: state.users.map(user =>\n            user.id === action.id ? {...user, active: !user.active } : user\n          )\n        };\n      case 'REMOVE_USER':\n        return{\n          users: state.users.filter(user => user.id !== action.id)\n        };\n      default:\n        return state;\n  }\n}\n\nexport const UserDispatch = React.createContext(null);\n\nfunction App() {\n  \n  const [{ username, email }, onChange, reset] = useInputs({\n    username:'',\n    email:''\n  });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n\n  const {users} = state;\n\n  const onCreate = useCallback(() =>{\n    dispatch({\n      type: 'CREATE_USER',\n      user:{\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    onReset();\n    nextId.current += 1;\n  }, [username, email, reset]);\n  \n  const count = useMemo(()=> countActiveUsers(users), [users]);\n  return (\n    <>\n      <CreateUser \n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList \n        users={users}\n\n\n      />\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}