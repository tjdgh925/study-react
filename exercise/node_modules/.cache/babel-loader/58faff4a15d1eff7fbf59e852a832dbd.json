{"ast":null,"code":"var _jsxFileName = \"/Users/jangsungho/Desktop/study-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser'; // import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'Jang',\n    email: 'tjdgh92@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'kim',\n    email: 'kim@example.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.input;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : 0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dT3DO/vpR+n1zA7eyJ0wo5o3Jh4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jangsungho/Desktop/study-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","name","value","concat","App","dispatch","nextId","input","onChange","e","target","onCreate","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4CC,WAA5C,QAA8D,OAA9D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AACA;AACA;AACA;;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,EAAkCC,MAAzC;AACD;;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE;AAFF,GADY;AAKnBV,EAAAA,KAAK,EAAC,CACJ;AACEW,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,MAFZ;AAGEC,IAAAA,KAAK,EAAE,mBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GADI,EAOJ;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,KAAK,EAAE,oBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAPI,EAaJ;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEF,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,KAAK,EAAE,iBAHT;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAbI;AALa,CAArB;;AA2BA,SAASO,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,aAAM,EACJ,GAAGF,KADC;AAEJL,QAAAA,MAAM,EAAC,EACL,GAAGK,KAAK,CAACL,MADJ;AAEL,WAACM,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFjB;AAFH,OAAN;;AAOA,SAAK,aAAL;AACE,aAAM;AACJT,QAAAA,MAAM,EAAED,YAAY,CAACC,MADjB;AAEJR,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYkB,MAAZ,CAAmBJ,MAAM,CAACV,IAA1B;AAFH,OAAN;;AAIF;AACE,aAAOS,KAAP;AAfN;AAiBD;;AAED,SAASM,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoB1B,UAAU,CAACkB,OAAD,EAAUL,YAAV,CAApC;AACA,QAAMc,MAAM,GAAG5B,MAAM,CAAC,CAAD,CAArB;AAEA,QAAM;AAACO,IAAAA;AAAD,MAAUa,KAAhB;AACA,QAAM;AAACJ,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAqBG,KAAK,CAACS,KAAjC;AAEA,QAAMC,QAAQ,GAAG3B,WAAW,CAAC4B,CAAC,IAAG;AAC/B,UAAM;AAACR,MAAAA,IAAD;AAAQC,MAAAA;AAAR,QAAiBO,CAAC,CAACC,MAAzB;AACAL,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,IAFO;AAGPC,MAAAA;AAHO,KAAD,CAAR;AAKD,GAP2B,EAOzB,EAPyB,CAA5B;AAQA,QAAMS,QAAQ,GAAG9B,WAAW,CAAC,MAAK;AAChCwB,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,aADC;AAEPX,MAAAA,IAAI,EAAC;AACHO,QAAAA,EAAE,EAAEU,MAAM,CAACM,OADR;AAEHlB,QAAAA,QAFG;AAGHC,QAAAA;AAHG;AAFE,KAAD,CAAR;AAQAW,IAAAA,MAAM,CAACM,OAAP,IAAkB,CAAlB;AACD,GAV2B,EAUzB,CAAClB,QAAD,EAAWC,KAAX,CAVyB,CAA5B;AAWA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAED,QAAtB;AAAgC,MAAA,KAAK,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;;GAlCQmB,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, {useRef, useReducer, useMemo, useCallback} from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\n\n// import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs:{\n    username: '',\n    email: ''\n  },\n  users:[\n    {\n      id: 1,\n      username: 'Jang',\n      email: 'tjdgh92@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'kim',\n      email: 'kim@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action){\n  switch(action.type){\n    case 'CHANGE_INPUT':\n      return{\n        ...state,\n        inputs:{\n          ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n      case 'CREATE_USER':\n        return{\n          inputs: initialState.inputs,\n          users: state.users.concat(action.user)\n        };\n      default:\n        return state;\n  }\n}\n\nfunction App() {\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n\n  const {users} = state;\n  const {username, email } = state.input;\n\n  const onChange = useCallback(e =>{\n    const {name , value} = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const onCreate = useCallback(() =>{\n    dispatch({\n      type: 'CREATE_USER',\n      user:{\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n  }, [username, email])\n  return (\n    <>\n      <CreateUser username={username} email={email}/>\n      <UserList users={users} />\n      <div>활성사용자 수 : 0</div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}