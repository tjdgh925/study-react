{"ast":null,"code":"var _jsxFileName = \"/Users/jangsungho/Desktop/study-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser'; // import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nfunction App() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  }, []);\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'Jang',\n    email: 'tjdgh92@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'kim',\n    email: 'kim@example.com',\n    active: false\n  }]);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers(users => users.concat(user));\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  const onRemove = useCallback(id => {\n    setUsers(users => users.filter(user => user.id !== id));\n  }, []);\n  const onToggle = useCallback(id => {\n    setUsers(users => users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"aaPx6Hx+yZYVLO2lNpfQ+5D4IA8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jangsungho/Desktop/study-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","App","inputs","setInputs","useState","username","email","onChange","e","name","value","target","setUsers","id","nextId","onCreate","current","concat","onRemove","onToggle","map","count"],"mappings":"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","sourcesContent":["import React, {useRef, useReducer, useMemo, useCallback} from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\n\n// import InputSample from './InpustSample';\n// import Counter from './Counter';\n// import Hello from './Hello';\n// import Wrapper from './Wrapper';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자의 수를 계산하는중');\n  return users.filter(user => user.active).length;\n}\n\nfunction App() {\n  const [inputs, setInputs] = useState({\n    username:'',\n    email:''\n  });\n  const {username, email} = inputs;\n  const onChange = useCallback(\n    e =>{\n      const {name, value} = e.target;\n      setInputs({\n        ...inputs,\n        [name]:value\n      });\n    },\n    []\n  );\n  const [users, setUsers] =useState([   \n    {\n        id: 1,\n        username: 'Jang',\n        email: 'tjdgh92@gmail.com',\n        active: true\n    },\n    {\n        id: 2,\n        username: 'tester',\n        email: 'tester@example.com',\n        active: false\n    },\n    {\n        id: 3,\n        username: 'kim',\n        email: 'kim@example.com',\n        active: false\n    }\n    ]);\n    const nextId = useRef(4);\n    const onCreate = useCallback(() =>{\n        const user = {\n          id: nextId.current,\n          username,\n          email\n        };\n        setUsers(users => users.concat(user));\n        setInputs({\n          username:'',\n          email:''\n        });\n        nextId.current += 1;\n      }, [username, email]\n    );\n    const onRemove = useCallback(\n        id =>{\n        setUsers(users => users.filter(user => user.id !== id));\n      }, []\n    );\n    const onToggle = useCallback(\n        id =>{\n          setUsers(users =>\n            users.map(user=>\n              user.id === id ? { ...user, active: !user.active} : user\n              )\n          );\n      }, []\n    );\n    const count = useMemo(() => countActiveUsers(users), [users]);\n    return (\n      <>\n        <CreateUser\n          username={username}\n          email={email}\n          onChange={onChange}\n          onCreate={onCreate}\n        />\n        <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\n        <div>활성사용자 수 : {count}</div>\n      </>\n    );\n  }\n  \n  export default App;"]},"metadata":{},"sourceType":"module"}